# Generated by Django 5.1.1 on 2024-09-09 10:11

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nom')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
            ],
            options={
                'verbose_name': 'Emplacement',
                'verbose_name_plural': 'Emplacements',
            },
        ),
        migrations.CreateModel(
            name='PropertyCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nom')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
            ],
            options={
                'verbose_name': 'Catégorie de propriété',
                'verbose_name_plural': 'Catégories de propriétés',
            },
        ),
        migrations.CreateModel(
            name='SiteParameters',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.TextField(verbose_name='Adresse')),
                ('phone', models.CharField(max_length=20, verbose_name='Téléphone')),
                ('email', models.EmailField(default='contact@example.com', max_length=254, verbose_name='Email')),
                ('twitter', models.URLField(blank=True, verbose_name='Twitter')),
                ('facebook', models.URLField(blank=True, verbose_name='Facebook')),
                ('instagram', models.URLField(blank=True, verbose_name='Instagram')),
                ('linkedin', models.URLField(blank=True, verbose_name='LinkedIn')),
                ('privacy_policy', models.TextField(verbose_name='Politique de confidentialité')),
                ('terms_and_conditions', models.TextField(verbose_name="Conditions d'utilisation")),
                ('logo', models.ImageField(blank=True, null=True, upload_to='site/', verbose_name='Logo')),
                ('site_name', models.CharField(default='Gestion de Location', max_length=100, verbose_name='Nom du site')),
            ],
            options={
                'verbose_name': 'Paramètres du site',
                'verbose_name_plural': 'Paramètres du site',
            },
        ),
        migrations.CreateModel(
            name='Visitor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100, verbose_name='Prénom')),
                ('last_name', models.CharField(max_length=100, verbose_name='Nom')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('phone_number', models.CharField(max_length=20, verbose_name='Numéro de téléphone')),
                ('address', models.TextField(verbose_name='Adresse')),
                ('sex', models.CharField(choices=[('M', 'Masculin'), ('F', 'Féminin'), ('O', 'Autre')], max_length=1, verbose_name='Sexe')),
                ('bio', models.TextField(blank=True, verbose_name='Biographie')),
                ('access_code', models.CharField(max_length=20, unique=True, verbose_name="Code d'accès")),
            ],
            options={
                'verbose_name': 'Visiteur',
                'verbose_name_plural': 'Visiteurs',
            },
        ),
        migrations.CreateModel(
            name='Finance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number_payed_with', models.CharField(max_length=100, verbose_name='Numéro de paiement')),
                ('date_payed', models.DateTimeField(auto_now_add=True, verbose_name='Date de paiement')),
                ('motive', models.CharField(max_length=255, verbose_name='Motif')),
                ('is_handled', models.BooleanField(default=False, verbose_name='Traité')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Utilisateur')),
            ],
            options={
                'verbose_name': 'Finance',
                'verbose_name_plural': 'Finances',
            },
        ),
        migrations.CreateModel(
            name='Property',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number_of_rooms', models.PositiveIntegerField(default=1, verbose_name='Nombre de pièces')),
                ('number_of_bedrooms', models.PositiveIntegerField(default=1, verbose_name='Nombre de chambres')),
                ('number_of_toilets', models.PositiveIntegerField(default=1, verbose_name='Nombre de toilettes')),
                ('number_of_baths', models.PositiveIntegerField(default=1, verbose_name='Nombre de salles de bain')),
                ('number_of_kitchens', models.PositiveIntegerField(default=1, verbose_name='Nombre de cuisines')),
                ('main_picture', models.ImageField(upload_to='properties/', verbose_name='Image principale')),
                ('picture_1', models.ImageField(blank=True, null=True, upload_to='properties/', verbose_name='Image 1')),
                ('picture_2', models.ImageField(blank=True, null=True, upload_to='properties/', verbose_name='Image 2')),
                ('picture_3', models.ImageField(blank=True, null=True, upload_to='properties/', verbose_name='Image 3')),
                ('picture_4', models.ImageField(blank=True, null=True, upload_to='properties/', verbose_name='Image 4')),
                ('picture_5', models.ImageField(blank=True, null=True, upload_to='properties/', verbose_name='Image 5')),
                ('is_available', models.BooleanField(default=True, verbose_name='Disponible')),
                ('date_available', models.DateField(default=django.utils.timezone.now, verbose_name='Date de disponibilité')),
                ('price_per_month', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Prix par mois')),
                ('reservation_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Prix de réservation')),
                ('total_surface_area', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Surface totale (m²)')),
                ('address', models.TextField(verbose_name='Adresse')),
                ('caution_fees', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Frais de caution')),
                ('contract_period', models.IntegerField(choices=[(3, '3 mois'), (6, '6 mois'), (12, '1 an')], default=12, verbose_name='Période de contrat')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='rental.location', verbose_name='Emplacement')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='rental.propertycategory', verbose_name='Catégorie')),
            ],
            options={
                'verbose_name': 'Propriété',
                'verbose_name_plural': 'Propriétés',
            },
        ),
        migrations.CreateModel(
            name='Saved',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name="Date d'enregistrement")),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rental.property', verbose_name='Propriété')),
                ('visitor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rental.visitor', verbose_name='Visiteur')),
            ],
            options={
                'verbose_name': 'Sauvegarde',
                'verbose_name_plural': 'Sauvegardes',
            },
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField(default=2, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Note')),
                ('comment', models.TextField(blank=True, verbose_name='Commentaire')),
                ('visitor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rental.visitor', verbose_name='Visiteur')),
            ],
            options={
                'verbose_name': 'Évaluation',
                'verbose_name_plural': 'Évaluations',
            },
        ),
        migrations.CreateModel(
            name='BookingReservation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='Date de réservation')),
                ('is_handled', models.BooleanField(default=False, verbose_name='Traitée')),
                ('booking_reason', models.TextField(blank=True, verbose_name='Raison de la réservation')),
                ('visitor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rental.visitor', verbose_name='Visiteur')),
            ],
            options={
                'verbose_name': 'Réservation',
                'verbose_name_plural': 'Réservations',
            },
        ),
    ]
